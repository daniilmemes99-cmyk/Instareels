import os
import asyncio
import tempfile
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from yt_dlp import YoutubeDL

API_TOKEN = os.getenv("BOT_TOKEN")  # —Ç–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è

if not API_TOKEN:
    raise RuntimeError("–ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN. –î–æ–±–∞–≤—å –µ–≥–æ –≤ Railway Variables.")

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

def download_instagram_sync(url: str, dest_dir: str) -> str:
    ydl_opts = {
        "outtmpl": os.path.join(dest_dir, "%(id)s.%(ext)s"),
        "format": "mp4",
        "noplaylist": True,
        "quiet": True,
    }
    with YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(url, download=True)
        return ydl.prepare_filename(info)

@dp.message_handler(commands=["start", "help"])
async def cmd_start(msg: types.Message):
    await msg.answer("üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ Instagram Reels, –∏ —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ üé¨")

@dp.message_handler()
async def handle(msg: types.Message):
    url = msg.text.strip()
    if "instagram.com/reel" not in url:
        await msg.reply("‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ Instagram Reels.")
        return

    await msg.reply("‚è≥ –°–∫–∞—á–∏–≤–∞—é...")

    with tempfile.TemporaryDirectory() as tmpdir:
        loop = asyncio.get_event_loop()
        try:
            file_path = await loop.run_in_executor(None, download_instagram_sync, url, tmpdir)
        except Exception as e:
            await msg.reply(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return

        if not os.path.exists(file_path):
            await msg.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ.")
            return

        try:
            with open(file_path, "rb") as f:
                await bot.send_video(chat_id=msg.chat.id, video=f, caption="‚úÖ –ì–æ—Ç–æ–≤–æ!")
        except Exception as e:
            await msg.reply(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)